branches:
  only: 
    - master
stages:
  - lint
  - compile
  - test
jobs:
  include:
    - &pod
      stage: lint
      osx_image: xcode8.3
      env: SWIFT=3.1
      name: pod lib lint --swift-version=3.1
      os: osx
      language: objective-c
      cache:
        - cocoapods
        - directories:
          - Carthage
      before_install:
        gem install cocoapods --prerelease --version 1.6.0.beta.1
      install:
        carthage bootstrap --no-build PromiseKit
      script: |
        cd Carthage/Checkouts/PromiseKit
        mv .github/PromiseKit.podspec .
        rm -rf Extensions/Alamofire/Sources
        cp -R ../../../Sources Extensions/Alamofire
        pod lib lint --subspec=PromiseKit/Alamofire --fail-fast --swift-version=$SWIFT
    - <<: *pod
      osx_image: xcode9.2
      env: SWIFT=3.2
      name: pod lib lint --swift-version=3.2
    - <<: *pod
      osx_image: xcode9.4
      env: SWIFT=3.3
      name: pod lib lint --swift-version=3.3
    - <<: *pod
      osx_image: xcode10
      env: SWIFT=3.4
      name: pod lib lint --swift-version=3.4
    - <<: *pod
      osx_image: xcode9.2
      env: SWIFT=4.0
      name: pod lib lint --swift-version=4.0
    - <<: *pod
      osx_image: xcode9.4
      env: SWIFT=4.1
      name: pod lib lint --swift-version=4.1
    - <<: *pod
      osx_image: xcode10
      env: SWIFT=4.2
      name: pod lib lint --swift-version=4.2

    - stage: compile
      osx_image: xcode10
      name: Carthage / watchOS
      os: osx
      language: objective-c
      script:
        carthage bootstrap --platform watchOS
      cache:
        directories:
        - Carthage

# Alamofire does not yet support Linux
    # - &linux
    #   stage: compile
    #   env: SWIFT_BUILD_VERSION=3  SWIFT_VERSION=4.0.3
    #   name: Linux / Swift 3.2.3
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   language: generic
    #   before_install:
    #     eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
    #   script:
    #     swift build -Xswiftc -swift-version -Xswiftc $SWIFT_BUILD_VERSION
    # - <<: *linux
    #   env: SWIFT_BUILD_VERSION=4  SWIFT_VERSION=4.2.1
    #   name: Linux / Swift 4.2.1

    - &swiftpm
      stage: compile
      name: Xcode 8.3 / SwiftPM
      os: osx
      osx_image: xcode8.3
      language: objective-c
      script: swift build
    - <<: *swiftpm
      name: Xcode 9.4 / SwiftPM
      osx_image: xcode9.4
    - <<: *swiftpm
      name: Xcode 10.1 / SwiftPM
      osx_image: xcode10

    - &test
      stage: test
      osx_image: xcode10
      name: macOS Tests
      env: DST='arch=x86_64' PLAT=macOS
      os: osx
      language: objective-c
      cache:
        directories:
        - Carthage
      before_install:
        carthage bootstrap --cache-builds --no-use-binaries --platform $PLAT
      install:
        xcodebuild -scheme PMKAlamofire -target PMKAlamofire -quiet -destination "$DST" SWIFT_TREAT_WARNINGS_AS_ERRORS=YES build
      script:
        xcodebuild -scheme PMKAlamofire -quiet -destination "$DST" test
    - <<: *test
      env: DST='OS=12.0,name=iPhone SE' PLAT=iOS
      name: iOS Tests
    - <<: *test
      env: DST='OS=12.0,name=Apple TV' PLAT=tvOS
      name: tvOS Tests
